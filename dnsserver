#!/usr/bin/env python3

import socketserver
import sys
import threading
import traceback

import dnslib
from dnslib import *

# reference: https://gist.github.com/pklaus/b5a7876d4d2cf7271873
from measurement import get_nearest_replica

DOMAIN_NAME = "cs5700cdn.example.com."
TTL = 60 * 5


def dns_response(data, client_ip):
    while True:
        try:
            request = DNSRecord.parse(data)
            break
        except (BufferError, DNSError):
            continue

    nearest_ip = get_nearest_replica(client_ip)

    reply = DNSRecord(DNSHeader(id=request.header.id, qr=1, aa=1, ra=1), q=request.q)

    rdata = A(nearest_ip)

    rqt = rdata.__class__.__name__
    reply.add_answer(RR(rname=DOMAIN_NAME, rtype=getattr(QTYPE, rqt), rclass=1, ttl=TTL, rdata=rdata))
    #print("---- Reply:\n", reply)

    return reply.pack()


class BaseRequestHandler(socketserver.BaseRequestHandler):

    def get_data(self):
        raise NotImplementedError

    def send_data(self, data):
        raise NotImplementedError

    def handle(self):
        client_ip = self.client_address[0]
        try:
            data = self.get_data()
            self.send_data(dns_response(data, client_ip))
        except Exception:
            traceback.print_exc(file=sys.stderr)


class UDPRequestHandler(BaseRequestHandler):

    def get_data(self):
        return self.request[0].strip()

    def send_data(self, data):
        return self.request[1].sendto(data, self.client_address)


class DNSServer:
    def __init__(self, port):
        self.port = port
        self.server = socketserver.ThreadingUDPServer(('', port), UDPRequestHandler)

    def run(self):
        thread = threading.Thread(target=self.server.serve_forever)
        thread.daemon = True
        thread.start()

        try:
            while 1:
                time.sleep(1)
                sys.stderr.flush()
                sys.stdout.flush()

        except KeyboardInterrupt:
            pass
        finally:
            self.server.shutdown()


if __name__ == '__main__':
    if len(sys.argv) != 5:
        sys.exit("Invalid number of arguments")
    port = sys.argv[2]
    name = sys.argv[4]
    dns_server = DNSServer(int(port))
    dns_server.run()
